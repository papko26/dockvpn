#!/bin/sh
set -e

[ -d /dev/net ] ||
    mkdir -p /dev/net
[ -c /dev/net/tun ] ||
    mknod /dev/net/tun c 10 200

SERVER_DNS_NAME="$1"
SERVER_IP=$(curl -s ifconfig.co)

if [ -z $SERVER_DNS_NAME ]
then
    VPN_ADDR=$SERVER_IP
else
    DNS_IP=$(host "$SERVER_DNS_NAME" | awk '{print $4}')
    if [ "$DNS_IP" == $SERVER_IP ]
        then
        VPN_ADDR=$SERVER_DNS_NAME
    else
        echo "DNS IP AND LISTEN IP DISMATCHED, FALLING BACK TO IP ADDR"
        VPN_ADDR=$SERVER_IP
    fi
fi

CLOACK_REDIRECT_HOST="$2"

cd /etc/openvpn
[ -f dh.pem ] ||
    openssl dhparam -out dh.pem 2048
[ -f ca_key.pem ] ||
    openssl genrsa -out ca_key.pem 2048
chmod 600 ca_key.pem
[ -f ca_csr.pem ] ||
    openssl req -new -key ca_key.pem -out ca_csr.pem -subj /CN=VPN_CA/
[ -f ca.pem ] ||
    openssl x509 -req -in ca_csr.pem -out ca.pem -signkey ca_key.pem -days 36525
[ -f ca.srl ] ||
    echo 01 > ca.srl
[ -f server_key.pem ] ||
    openssl genrsa -out server_key.pem 2048
chmod 600 server_key.pem
[ -f server_csr.pem ] ||
    openssl req -new -key server_key.pem -out server_csr.pem -subj /CN=VPN_Server/
[ -f server.pem ] ||
openssl x509 -req -in server_csr.pem -out server.pem -CA ca.pem -CAkey ca_key.pem -days 36525




[ -f tcp443.conf ] || cat >tcp443.conf <<EOF
server 192.168.255.0 255.255.255.128
verb 0
duplicate-cn
key server_key.pem
ca ca.pem
cert server.pem
dh dh.pem
keepalive 10 60
persist-key
persist-tun
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"

proto tcp-server
port 443
port-share 127.0.0.1 4443
dev tun443
EOF

cd /etc/openvpn
[ -f client_key.pem ] ||
    openssl genrsa -out client_key.pem 2048
    chmod 600 client_key.pem
[ -f client_csr.pem ] ||
    openssl req -new -key client_key.pem -out client_csr.pem -subj /CN=VPN_client/
[ -f client_cert.pem ] ||
    openssl x509 -req -in client_csr.pem -out client_cert.pem -CA ca.pem -CAkey ca_key.pem -days 36525

[ -f client.ovpn ] || cat >client.ovpn <<EOF
client
nobind
dev tun
redirect-gateway def1

<key>
`cat client_key.pem`
</key>
<cert>
`cat client_cert.pem`
</cert>
<ca>
`cat ca.pem`
</ca>
<dh>
`cat dh.pem`
</dh>

<connection>
remote $VPN_ADDR 443 tcp-client
</connection>
EOF

[ -f scramblesuit-client.ovpn  ] || cat >scramblesuit-client.ovpn <<EOF
client
nobind
dev tun
redirect-gateway def1

<key>
`cat client_key.pem`
</key>
<cert>
`cat client_cert.pem`
</cert>
<ca>
`cat ca.pem`
</ca>
<dh>
`cat dh.pem`
</dh>

<connection>
remote 127.0.0.1 2626 tcp-client
</connection>
EOF


CLOACK_REDIRECT_HOST="$1"
if [ -z $CLOACK_REDIRECT_HOST ]
then
    CLOACK_REDIRECT_HOST="http://www.deere.com"
fi

openssl genrsa -out traktor.key 2048
openssl req -new -key traktor.key -out traktor.csr -subj /CN=Traktor/
openssl x509 -req -days 365 -in traktor.csr -signkey traktor.key -out traktor.crt
cat traktor.key traktor.crt >> traktor.pem

[ -f ha.conf ] || cat >ha.conf <<EOF
frontend scramblesuit
    bind  *:80
    mode tcp
    use_backend scramblesuit

frontend cloack
    bind 127.0.0.1:4443 ssl crt traktor.pem
    mode http
    redirect code 301 location $CLOACK_REDIRECT_HOST
backend scramblesuit
    server ssuit 127.0.0.1:8888
EOF


[ -f ssuit.pass ] || echo $RANDOM $RANDOM $RANDOM $RANDOM| base32 > ssuit.pass

[ -f run_ssuit.sh ] || cat >run_ssuit.sh <<EOF
mkdir /tmp/scramblesuit/ && cd /tmp/scramblesuit/
obfsproxy --log-min-severity info --data-dir=/tmp scramblesuit --password `cat ssuit.pass`  --dest $VPN_ADDR:80 client 127.0.0.1:2626 &
EOF

mkdir /tmp/scramblesuit/

iptables -t nat -A POSTROUTING -s 192.168.255.0/24 -o eth0 -j MASQUERADE

while true ; do obfsproxy --data-dir=/tmp scramblesuit --password $(cat ssuit.pass)  --dest 127.0.0.1:443 server 127.0.0.1:8888 ; done &
while true ; do haproxy -f ha.conf ; done &
while true ; do openvpn tcp443.conf; sleep 10 ; done &

sleep infinity
